name: libjxl
defaults:
  run:
    shell: bash
on:
  workflow_dispatch:
  
jobs:
  brotli:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    steps:    
      - name: Install Dependencies
        run: |
          sudo echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm --needed git ninja cmake python-pip curl python-cairo
          pip3 install -U setuptools rst2pdf mako jsonschema meson
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD
          exit
           
      - uses: actions/checkout@main
      - name: Loading cross gcc cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/cross
          key: cross-gcc-${{ github.run_id }}
          restore-keys: |
            cross-gcc-
            
      - name: Loading rust toolchain cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/rustup_location
          key: rust_toolchain-${{ github.run_id }}
          restore-keys: |
            rust_toolchain-
            
      - name: Building
        run: |
          cd brotli-dev; makepkg

      - name: Release
        continue-on-error: true
        uses: softprops/action-gh-release@master
        with:
          tag_name: dev
          name: dev
          files: brotli-dev/*.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  highway:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    steps:    
      - name: Install Dependencies
        run: |
          sudo echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm --needed git ninja cmake python-pip curl
          pip3 install -U setuptools rst2pdf mako jsonschema meson
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD
          
      - uses: actions/checkout@main
      - name: Loading gcc cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/cross
          key: gcc-${{ github.run_id }}
          restore-keys: |
            gcc-
            
      - name: Loading rust toolchain cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/rustup_location
          key: rust_toolchain-${{ github.run_id }}
          restore-keys: |
            rust_toolchain-
            
      - name: Building
        run: |
          cd highway-dev; makepkg -si

      - name: Release
        continue-on-error: true
        uses: softprops/action-gh-release@master
        with:
          tag_name: dev
          name: dev
          files: highway-dev/*.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  lcms2:
    needs: [libjpeg, zlib]
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    steps:    
      - name: Install Dependencies
        run: |
          sudo echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm --needed git ninja cmake python-pip curl
          pip3 install -U setuptools rst2pdf mako jsonschema meson
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD
          
      - uses: actions/checkout@main
      - name: Loading gcc cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/cross
          key: gcc-${{ github.run_id }}
          restore-keys: |
            gcc-
            
      - name: Loading rust toolchain cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/rustup_location
          key: rust_toolchain-${{ github.run_id }}
          restore-keys: |
            rust_toolchain-
            
      - name: Building
        run: |
          curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-2.1.91-1-x86_64.pkg.tar.zst
          curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst
          pacman -U *.zst --noconfirm
          cd lcms2-dev;makepkg -si

      - name: Release
        continue-on-error: true
        uses: softprops/action-gh-release@master
        with:
          tag_name: dev
          name: dev
          files: lcms2-dev/*.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  libjpeg:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    steps:    
      - name: Install Dependencies
        run: |
          sudo echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm --needed git ninja cmake python-pip curl
          pip3 install -U setuptools rst2pdf mako jsonschema meson
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD
          
      - uses: actions/checkout@main
      - name: Loading gcc cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/cross
          key: gcc-${{ github.run_id }}
          restore-keys: |
            gcc-
            
      - name: Loading rust toolchain cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/rustup_location
          key: rust_toolchain-${{ github.run_id }}
          restore-keys: |
            rust_toolchain-
      - name: Building
        run: |
          cd libjpeg-dev; makepkg -si

      - name: Release
        continue-on-error: true
        uses: softprops/action-gh-release@master
        with:
          tag_name: dev
          name: dev
          files: libjpeg-dev/*.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  libjxl:
    needs: [brotli, highway, lcms2, libjpeg, libpng]
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    steps:    
      - name: Install Dependencies
        run: |
          sudo echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm --needed git ninja cmake python-pip curl
          pip3 install -U setuptools rst2pdf mako jsonschema meson
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD
          
      - uses: actions/checkout@main
      - name: Loading gcc cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/cross
          key: gcc-${{ github.run_id }}
          restore-keys: |
            gcc-
            
      - name: Loading rust toolchain cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/rustup_location
          key: rust_toolchain-${{ github.run_id }}
          restore-keys: |
            rust_toolchain-
            
      - name: Building
        run: |
          curl -OL https://github.com/${{ github.repository }}/releases/download/dev/brotli-dev-1.0.9-1-x86_64.pkg.tar.zst
          curl -OL https://github.com/${{ github.repository }}/releases/download/dev/highway-dev-1.0.4-1-x86_64.pkg.tar.zst
          curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.15-1-x86_64.pkg.tar.zst
          curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-2.1.91-1-x86_64.pkg.tar.zst
          curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst
          curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst
          pacman -U *.zst --noconfirm
          cd libjxl-dev; makepkg -si

      - name: Release
        continue-on-error: true
        uses: softprops/action-gh-release@master
        with:
          tag_name: dev
          name: dev
          files: libjxl-dev/*.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  libpng:
    needs: [zlib]
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    steps:    
      - name: Install Dependencies
        run: |
          sudo echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm --needed git ninja cmake python-pip curl
          pip3 install -U setuptools rst2pdf mako jsonschema meson
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD
          
      - uses: actions/checkout@main
      - name: Loading gcc cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/cross
          key: gcc-${{ github.run_id }}
          restore-keys: |
            gcc-
            
      - name: Loading rust toolchain cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/rustup_location
          key: rust_toolchain-${{ github.run_id }}
          restore-keys: |
            rust_toolchain-
            
      - name: Building
        run: |
          curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst
          pacman -U *.zst --noconfirm
          cd libpng-dev; makepkg -si

      - name: Release
        continue-on-error: true
        uses: softprops/action-gh-release@master
        with:
          tag_name: dev
          name: dev
          files: libpng-dev/*.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  zlib:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    steps:    
      - name: Install Dependencies
        run: |
          sudo echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm --needed git ninja cmake python-pip curl
          pip3 install -U setuptools rst2pdf mako jsonschema meson
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD
          
      - uses: actions/checkout@main
      - name: Loading gcc cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/cross
          key: gcc-${{ github.run_id }}
          restore-keys: |
            gcc-
            
      - name: Loading rust toolchain cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/rustup_location
          key: rust_toolchain-${{ github.run_id }}
          restore-keys: |
            rust_toolchain-
            
      - name: Building
        run: |
          cd zlib-dev; makepkg -si

      - name: Release
        continue-on-error: true
        uses: softprops/action-gh-release@master
        with:
          tag_name: dev
          name: dev
          files: zlib-dev/*.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
