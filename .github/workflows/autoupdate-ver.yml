name: autoupdate-ver
on: 
  workflow_dispatch:
  #schedule:
  #- cron: '30 0 * * MON'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0
        token: ${{ secrets.BOT }}
    - name: Install git
      run: |
        sudo apt-get update
        sudo apt-get -y install git
    - name: Set env
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
    - name: Update
      shell: bash
      run: |
        rm ver.sh || true
        declare -A ver_array #声明关联数组
        ver_json=$(curl -s "https://raw.githubusercontent.com/eko5624/nginx-nosni/master/old.json")
        
        #第一种方案
        #while read -r k v; do
        #  ver_array[$k]=$v
        #done < <(echo "$ver_json" | jq -r 'to_entries | .[] | "\(.key) \(.value)"')

        #第二种方案
        while IFS= read -r line; do  #从标准输入逐行读取内容，并存储到变量"line"中。"IFS"设置空值防止前导和尾随的空白被修剪掉。"-r"禁用反斜杠转义。
          k=$(echo "$line" | jq -r 'keys_unsorted[]')  #提取每行对应的key。"keys_unsorted"是jq函数，表示任意次序。
          v=$(echo "$line" | jq -r ".$k")  #提取每行key对应的值。"-r"表示原始字符串格式输出，而不出json指定格式输出
          ver_array[$k]=$v  #把提取到的键值对存储到关联数组"ver_array"中
        done < <(echo "$ver_json" | jq -c 'to_entries | .[]')  #将JSON对象转换为键值对数组，并写入标准输入
        echo "VER_BINUTILS=${ver_array[binutils]}" >> ver.sh
        echo "VER_GCC=${ver_array[GCC]}" >> ver.sh
        echo "VER_GMP=${ver_array[gmp]}" >> ver.sh
        echo "VER_MPFR=${ver_array[mpfr]}" >> ver.sh
        echo "VER_MPC=${ver_array[mpc]}" >> ver.sh
        echo "VER_ISL=${ver_array[isl]}" >> ver.sh
        echo "VER_MAKE=${ver_array[make]}" >> ver.sh
        echo "VER_CMAKE=${ver_array[cmake]}" >> ver.sh
        echo "VER_NINJA=${ver_array[ninja]}" >> ver.sh
        echo "VER_NASM=${ver_array[nasm]}" >> ver.sh
        echo "VER_YASM=${ver_array[yasm]}" >> ver.sh
        echo "VER_PKGCONF=${ver_array[pkgconf]}" >> ver.sh
    - name: release
      run: |
        git add -A
        git commit -am "Automate" || echo "nothing updated"
        git push -f 
