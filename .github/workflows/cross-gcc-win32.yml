name: cross-gcc-win32
defaults:
  run:
    shell: bash
on:
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:base-devel
    steps:    
      - name: Install Dependencies
        run: |
          sudo echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm --needed git gyp cvs mercurial subversion ninja cmake ragel yasm nasm asciidoc enca gperf zip unzip p7zip xz gcc-multilib clang python-pip curl jq lib32-glib2 wget
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD
          
      - uses: actions/checkout@main
      - name: Loading gcc cache
        uses: actions/cache/restore@main
        with:
          path: ${{ github.workspace }}/cross
          key: cross-gcc-win32-${{ github.run_id }}
          restore-keys: |
            cross-gcc-win32-
            
      - name: Building toolchain
        run: |
          PWD=$(pwd)
          if [[ ! "$(ls -A $PWD/cross/bin)" ]]; then
            chmod +x ./cross-gcc-win32.sh
            ./cross-gcc-win32.sh
          fi  

      - name: Packaging toolchain
        run: |
          rm -f cross/mingw 
          7z a cross-gcc-win32.7z cross/*

      - name: Release
        continue-on-error: true
        env:
          GH_TOKEN: ${{ github.token }} 
        run: |
          chmod +x ./release-package.sh
          ./release-package.sh cross-gcc-win32.7z

      - name: Saving gcc cache
        uses: actions/cache/save@main
        if: always()
        with:
          path: ${{ github.workspace }}/cross
          key: cross-gcc-win32-${{ github.run_id }}
          
