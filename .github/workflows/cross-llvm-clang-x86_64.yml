name: Build llvm-clang-x86_64
defaults:
  run:
    shell: bash
on:
  workflow_dispatch:
    inputs:
      pgo:
        description: "Build toolchain with IR Profile Instrumentation"
        required: false
        default: "false"
        type: boolean
      llvm_lto:
        description: "Build LLVM with ThinLTO"
        required: false
        default: "false"
        type: boolean
      llvm_ccache:
        description: "Build LLVM with CCACHE"
        required: false
        default: "false"
        type: boolean
      package_lto:
        description: "Build packages with ThinLTO"
        required: false
        default: "false"
        type: boolean        
      package_ccache:
        description: "Build packages with CCACHE"
        required: false
        default: "false"
        type: boolean
  
jobs:
  build_llvm-clang-x86_64:
    runs-on: ubuntu-latest
    container:
      image: docker://ghcr.io/eko5624/archlinux:latest
    steps:
      - name: Init variable
        run: |
          if [ ${{ inputs.pgo }} == 'true' ]; then
            echo "PGO=--enable-pgo" >> $GITHUB_ENV
            echo "IR=-ir" >> $GITHUB_ENV
          else  
            unset PGO IR
          fi

      - name: Checkout
        uses: actions/checkout@main
         
      - name: Setup llvm${{ env.IR }}
        run: |
          curl -OL https://github.com/eko5624/toolchain/releases/download/toolchain/llvm$IR-latest.7z
          7z x llvm*.7z
          rm llvm*.7z
          rm -rf cross/llvm-thinlto || true
          rm -rf cross/llvm-ccache || true
            
      - name: Build toolchain
        run: |
          set -x
          chmod +x ./cross-llvm-clang.sh
          ./cross-llvm-clang.sh --build-x86_64

      - name: Get current timestamp
        run: echo "date=$(date +%Y%m%d)" >> $GITHUB_ENV  

      - name: Package toolchain
        run: |
          7z a llvm-clang$IR-latest-ucrt-x86_64.7z cross/*
          if [ ${{ inputs.pgo }} != 'true' ]; then
            cp llvm-clang$IR-latest-ucrt-x86_64.7z llvm-clang$IR-${{ env.date }}-ucrt-x86_64.7z
          fi  
      
      - name: Delete
        continue-on-error: true
        env:
          GH_TOKEN: ${{ github.token }} 
        run: |
          chmod +x ./package-delete.sh
          ./package-delete.sh llvm-clang$IR-latest-ucrt-x86_64.7z
      - name: Release
        continue-on-error: true
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          chmod +x ./package-release.sh
          ./package-release.sh

  build_rust:
    needs: build_llvm-clang-x86_64
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Run rustup.yml
        run: |
          if [ ${{ inputs.pgo }} != 'true' ]; then          
            curl -u eko5624:$GH_TOKEN \
            -X POST -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/eko5624/toolchain/actions/workflows/rustup.yml/dispatches \
            -d '{"ref":"main"}'
          fi  

  build_llvm-pgo:
    needs: build_llvm-clang-x86_64
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Run llvm-clang-pgo.yml
        if: ${{ inputs.pgo }}
        run: |
          curl -u eko5624:$GH_TOKEN \
          -X POST -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/eko5624/toolchain/actions/workflows/cross-llvm-pgo.yml/dispatches \
          -d '{"ref":"main","inputs":{"llvm_lto":"${{ inputs.llvm_lto }}","llvm_ccache":"${{ inputs.llvm_ccache }}","package_lto":"${{ inputs.package_lto }}","package_ccache":"${{ inputs.package_ccache }}"}}'